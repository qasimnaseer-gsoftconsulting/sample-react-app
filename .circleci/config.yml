version: 2.1

jobs: 
  test-build-and-deploy:
    docker:
      - image: circleci/node:14 # Choose an appropriate Node.js version
    steps: 
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run Tests
          command: npm test
      - run:
          name: Build React App
          command: |
            if [ $? -eq 0 ]; then
              npm run build
            else
              echo "Tests failed, skipping build."
              exit 1
            fi
      - run:
          name: Deploy to EC2
          command: |
            chmod 400 /home/circleci/project/.circleci/react-app-key-pair.pem
            ssh -i "/home/circleci/project/.circleci/react-app-key-pair.pem" ec2-user@ec2-3-12-150-252.us-east-2.compute.amazonaws.com
#           sudo apt update
#           sudo apt upgrade -y




workflows:
  version: 2
  test-build-and-deploy-workflow:
    jobs:
      - test-build-and-deploy



# version: 2.1

# orbs:
#   node: circleci/node@5.1.0

# jobs:
#   build:
#     docker:
#       - image: circleci/node:14
#     steps:
#       - checkout
#       - run: npm install
#       - run: npm test
#       - run: npm run build
#       - persist_to_workspace:
#           root: .
#           paths:
#             - build/

#   deploy:
#     docker:
#       - image: circleci/node:14
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: Install SSH client
#           command: sudo apt-get update && sudo apt-get install -y openssh-client
#       - run:
#           name: Copy files to EC2 instance
#           command: scp -i $EC2_PRIVATE_KEY -r build/* $EC2_USERNAME@$EC2_PUBLIC_IP:/home/ec2-user/
#       - run:
#           name: SSH into EC2 instance and run deployment script
#           command: ssh -i $EC2_PRIVATE_KEY $EC2_USERNAME@$EC2_PUBLIC_IP "bash /home/ec2-user/deploy-script.sh"

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: main
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: main